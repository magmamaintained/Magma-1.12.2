--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityHopper.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityHopper.java
@@ -7,12 +7,14 @@
 import net.minecraft.block.BlockHopper;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.item.EntityMinecartHopper;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerHopper;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.inventory.ISidedInventory;
+import net.minecraft.inventory.InventoryLargeChest;
 import net.minecraft.inventory.ItemStackHelper;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
@@ -27,6 +29,13 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.v1_12_R1.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftInventoryDoubleChest;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+import org.bukkit.event.inventory.InventoryPickupItemEvent;
+import org.bukkit.inventory.Inventory;
 
 public class TileEntityHopper extends TileEntityLockableLoot implements IHopper, ITickable
 {
@@ -34,6 +43,32 @@
     private int field_145901_j = -1;
     private long field_190578_g;
 
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+
+    public List<ItemStack> getContents() {
+        return this.field_145900_a;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+
+    @Override
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    @Override
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    @Override
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
     public static void func_189683_a(DataFixer p_189683_0_)
     {
         p_189683_0_.func_188258_a(FixTypes.BLOCK_ENTITY, new ItemStackDataLists(TileEntityHopper.class, new String[] {"Items"}));
@@ -106,7 +141,7 @@
 
     public int func_70297_j_()
     {
-        return 64;
+        return maxStack;
     }
 
     public void func_73660_a()
@@ -144,7 +179,7 @@
 
                 if (flag)
                 {
-                    this.func_145896_c(8);
+                    this.func_145896_c(field_145850_b.spigotConfig.hopperTransfer); // Spigot
                     this.func_70296_d();
                     return true;
                 }
@@ -191,6 +226,7 @@
 
     private boolean func_145883_k()
     {
+        if (net.minecraftforge.items.VanillaInventoryCodeHooks.insertHook(this)) { return true; }
         IInventory iinventory = this.func_145895_l();
 
         if (iinventory == null)
@@ -212,11 +248,36 @@
                     if (!this.func_70301_a(i).func_190926_b())
                     {
                         ItemStack itemstack = this.func_70301_a(i).func_77946_l();
-                        ItemStack itemstack1 = func_174918_a(this, iinventory, this.func_70298_a(i, 1), enumfacing);
+                        // ItemStack itemstack1 = putStackInInventoryAllSlots(this, iinventory, this.decrStackSize(i, 1), enumfacing);
+                        // CraftBukkit start - Call event when pushing items into other inventories
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.func_70298_a(i, 1));
 
+                        Inventory destinationInventory;
+                        // Have to special case large chests as they work oddly
+                        if (iinventory instanceof InventoryLargeChest) {
+                            destinationInventory = new CraftInventoryDoubleChest((InventoryLargeChest) iinventory);
+                        } else {
+                            destinationInventory = iinventory.getOwner().getInventory();
+                        }
+
+                        InventoryMoveItemEvent event = new InventoryMoveItemEvent(this.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+                        this.func_145831_w().getServer().getPluginManager().callEvent(event);
+                        if (event.isCancelled()) {
+                            this.func_70299_a(i, itemstack);
+                            this.func_145896_c(8); // Delay hopper checks
+                            return false;
+                        }
+                        ItemStack itemstack1 = func_174918_a(this, iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumfacing);
+
                         if (itemstack1.func_190926_b())
                         {
-                            iinventory.func_70296_d();
+                            // iinventory.markDirty();
+                            if (event.getItem().equals(oitemstack)) {
+                                iinventory.func_70296_d();
+                            } else {
+                                this.func_70299_a(i, itemstack);
+                            }
+                            // CraftBukkit end
                             return true;
                         }
 
@@ -297,6 +358,8 @@
 
     public static boolean func_145891_a(IHopper p_145891_0_)
     {
+        Boolean ret = net.minecraftforge.items.VanillaInventoryCodeHooks.extractHook(p_145891_0_);
+        if (ret != null) return ret;
         IInventory iinventory = func_145884_b(p_145891_0_);
 
         if (iinventory != null)
@@ -355,14 +418,47 @@
         if (!itemstack.func_190926_b() && func_174921_b(p_174915_1_, itemstack, p_174915_2_, p_174915_3_))
         {
             ItemStack itemstack1 = itemstack.func_77946_l();
-            ItemStack itemstack2 = func_174918_a(p_174915_1_, p_174915_0_, p_174915_1_.func_70298_a(p_174915_2_, 1), (EnumFacing)null);
+            // ItemStack itemstack2 = putStackInInventoryAllSlots(inventoryIn, hopper, inventoryIn.decrStackSize(index, 1), (EnumFacing)null);
+            // CraftBukkit start - Call event on collection of items from inventories into the hopper
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(p_174915_1_.func_70298_a(p_174915_2_, p_174915_0_.func_145831_w().spigotConfig.hopperAmount));
 
+            Inventory sourceInventory;
+            // Have to special case large chests as they work oddly
+            if (p_174915_1_ instanceof InventoryLargeChest) {
+                sourceInventory = new CraftInventoryDoubleChest((InventoryLargeChest) p_174915_1_);
+            } else {
+                sourceInventory = p_174915_1_.getOwner().getInventory();
+            }
+
+            InventoryMoveItemEvent event = new InventoryMoveItemEvent(sourceInventory, oitemstack.clone(), p_174915_0_.getOwner().getInventory(), false);
+
+            p_174915_0_.func_145831_w().getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                p_174915_1_.func_70299_a(p_174915_2_, itemstack1);
+
+                if (p_174915_0_ instanceof TileEntityHopper) {
+                    ((TileEntityHopper) p_174915_0_).func_145896_c(p_174915_0_.func_145831_w().spigotConfig.hopperTransfer); // Delay hopper checks
+                } else if (p_174915_0_ instanceof EntityMinecartHopper) {
+                    ((EntityMinecartHopper) p_174915_0_).func_98042_n(p_174915_0_.func_145831_w().spigotConfig.hopperTransfer / 2); // Delay hopper minecart checks
+                }
+
+                return false;
+            }
+			 int origCount = event.getItem().getAmount(); // Spigot
+            ItemStack itemstack2 = func_174918_a(p_174915_1_, p_174915_0_, CraftItemStack.asNMSCopy(event.getItem()), null);
+
             if (itemstack2.func_190926_b())
             {
-                p_174915_1_.func_70296_d();
+                // inventoryIn.markDirty();
+                if (event.getItem().equals(oitemstack)) {
+                    p_174915_1_.func_70296_d();
+                } else {
+                    p_174915_1_.func_70299_a(p_174915_2_, itemstack1);
+                }
+                // CraftBukkit end
                 return true;
             }
-
+			itemstack1.func_190918_g(origCount - itemstack2.func_190916_E());
             p_174915_1_.func_70299_a(p_174915_2_, itemstack1);
         }
 
@@ -379,6 +475,11 @@
         }
         else
         {
+            InventoryPickupItemEvent event = new InventoryPickupItemEvent(p_145898_1_.getOwner().getInventory(), (org.bukkit.entity.Item) p_145898_2_.getBukkitEntity());
+            p_145898_2_.field_70170_p.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return false;
+            }
             ItemStack itemstack = p_145898_2_.func_92059_d().func_77946_l();
             ItemStack itemstack1 = func_174918_a(p_145898_0_, p_145898_1_, itemstack, (EnumFacing)null);
 
@@ -396,6 +497,12 @@
         }
     }
 
+
+    protected net.minecraftforge.items.IItemHandler createUnSidedHandler()
+    {
+        return new net.minecraftforge.items.VanillaHopperItemHandler(this);
+    }
+
     public static ItemStack func_174918_a(IInventory p_174918_0_, IInventory p_174918_1_, ItemStack p_174918_2_, @Nullable EnumFacing p_174918_3_)
     {
         if (p_174918_1_ instanceof ISidedInventory && p_174918_3_ != null)
@@ -482,7 +589,7 @@
                             }
                         }
 
-                        tileentityhopper1.func_145896_c(8 - k);
+                        tileentityhopper1.func_145896_c(tileentityhopper1.field_145850_b.spigotConfig.hopperTransfer - k); // Spigot
                     }
                 }
 
@@ -516,9 +623,11 @@
         int j = MathHelper.func_76128_c(p_145893_3_);
         int k = MathHelper.func_76128_c(p_145893_5_);
         BlockPos blockpos = new BlockPos(i, j, k);
-        Block block = p_145893_0_.func_180495_p(blockpos).func_177230_c();
+		if (!p_145893_0_.func_175667_e(blockpos)) return null; // Spigot
+        net.minecraft.block.state.IBlockState state = p_145893_0_.func_180495_p(blockpos);
+        Block block = state.func_177230_c();
 
-        if (block.func_149716_u())
+        if (block.hasTileEntity(state))
         {
             TileEntity tileentity = p_145893_0_.func_175625_s(blockpos);
 
@@ -611,4 +720,6 @@
     {
         return this.field_145900_a;
     }
+
+    public long getLastUpdateTime() { return field_190578_g; } // Forge
\ No newline at end of file
 }

--- ../src-base/minecraft/net/minecraft/entity/EntityLivingBase.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityLivingBase.java
@@ -1,14 +1,10 @@
 package net.minecraft.entity;
 
+import com.google.common.base.Function;
 import com.google.common.base.Objects;
+import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
-import java.util.Collection;
-import java.util.ConcurrentModificationException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.UUID;
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.block.Block;
@@ -19,32 +15,21 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.EnchantmentFrostWalker;
 import net.minecraft.enchantment.EnchantmentHelper;
-import net.minecraft.entity.ai.attributes.AbstractAttributeMap;
-import net.minecraft.entity.ai.attributes.AttributeMap;
-import net.minecraft.entity.ai.attributes.AttributeModifier;
-import net.minecraft.entity.ai.attributes.IAttribute;
-import net.minecraft.entity.ai.attributes.IAttributeInstance;
+import net.minecraft.entity.ai.EntityAISit;
+import net.minecraft.entity.ai.attributes.*;
 import net.minecraft.entity.item.EntityBoat;
 import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.item.EntityXPOrb;
 import net.minecraft.entity.passive.AbstractHorse;
-import net.minecraft.entity.passive.EntityWolf;
+import net.minecraft.entity.passive.EntityAnimal;
+import net.minecraft.entity.passive.EntityTameable;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.projectile.EntityArrow;
-import net.minecraft.init.Blocks;
-import net.minecraft.init.Enchantments;
-import net.minecraft.init.Items;
-import net.minecraft.init.MobEffects;
-import net.minecraft.init.SoundEvents;
+import net.minecraft.init.*;
 import net.minecraft.inventory.EntityEquipmentSlot;
-import net.minecraft.item.EnumAction;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemArmor;
-import net.minecraft.item.ItemElytra;
-import net.minecraft.item.ItemStack;
-import net.minecraft.nbt.NBTTagCompound;
-import net.minecraft.nbt.NBTTagList;
+import net.minecraft.item.*;
+import net.minecraft.nbt.*;
 import net.minecraft.network.datasync.DataParameter;
 import net.minecraft.network.datasync.DataSerializers;
 import net.minecraft.network.datasync.EntityDataManager;
@@ -55,41 +40,48 @@
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.potion.PotionUtils;
 import net.minecraft.stats.StatList;
-import net.minecraft.util.CombatRules;
-import net.minecraft.util.CombatTracker;
-import net.minecraft.util.DamageSource;
-import net.minecraft.util.EntityDamageSource;
-import net.minecraft.util.EntitySelectors;
-import net.minecraft.util.EnumFacing;
-import net.minecraft.util.EnumHand;
-import net.minecraft.util.EnumHandSide;
-import net.minecraft.util.EnumParticleTypes;
-import net.minecraft.util.NonNullList;
-import net.minecraft.util.SoundEvent;
+import net.minecraft.util.*;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.ISpecialArmor;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_12_R1.attribute.CraftAttributeMap;
+import org.bukkit.craftbukkit.v1_12_R1.entity.CraftPlayer;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityResurrectEvent;
+import org.bukkit.event.entity.EntityTeleportEvent;
+import org.bukkit.event.player.PlayerItemConsumeEvent;
 
 public abstract class EntityLivingBase extends Entity
 {
     private static final Logger field_190632_a = LogManager.getLogger();
     private static final UUID field_110156_b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
     private static final AttributeModifier field_110157_c = (new AttributeModifier(field_110156_b, "Sprinting speed boost", 0.30000001192092896D, 2)).func_111168_a(false);
+    public static final IAttribute SWIM_SPEED = new net.minecraft.entity.ai.attributes.RangedAttribute(null, "forge.swimSpeed", 1.0D, 0.0D, 1024.0D).func_111112_a(true);
     protected static final DataParameter<Byte> field_184621_as = EntityDataManager.<Byte>func_187226_a(EntityLivingBase.class, DataSerializers.field_187191_a);
-    private static final DataParameter<Float> field_184632_c = EntityDataManager.<Float>func_187226_a(EntityLivingBase.class, DataSerializers.field_187193_c);
+    public static final DataParameter<Float> field_184632_c = EntityDataManager.<Float>func_187226_a(EntityLivingBase.class, DataSerializers.field_187193_c);
     private static final DataParameter<Integer> field_184633_f = EntityDataManager.<Integer>func_187226_a(EntityLivingBase.class, DataSerializers.field_187192_b);
     private static final DataParameter<Boolean> field_184634_g = EntityDataManager.<Boolean>func_187226_a(EntityLivingBase.class, DataSerializers.field_187198_h);
     private static final DataParameter<Integer> field_184635_h = EntityDataManager.<Integer>func_187226_a(EntityLivingBase.class, DataSerializers.field_187192_b);
     private AbstractAttributeMap field_110155_d;
-    private final CombatTracker field_94063_bt = new CombatTracker(this);
-    private final Map<Potion, PotionEffect> field_70713_bf = Maps.<Potion, PotionEffect>newHashMap();
+    public CombatTracker field_94063_bt = new CombatTracker(this);
+    public final Map<Potion, PotionEffect> field_70713_bf = Maps.<Potion, PotionEffect>newHashMap(); // Spigot
     private final NonNullList<ItemStack> field_184630_bs = NonNullList.<ItemStack>func_191197_a(2, ItemStack.field_190927_a);
     private final NonNullList<ItemStack> field_184631_bt = NonNullList.<ItemStack>func_191197_a(4, ItemStack.field_190927_a);
     public boolean field_82175_bq;
@@ -116,7 +108,7 @@
     public float field_70759_as;
     public float field_70758_at;
     public float field_70747_aH = 0.02F;
-    protected EntityPlayer field_70717_bb;
+    public EntityPlayer field_70717_bb;
     protected int field_70718_bc;
     protected boolean field_70729_aU;
     protected int field_70708_bq;
@@ -126,7 +118,7 @@
     protected float field_70763_ax;
     protected float field_70741_aB;
     protected int field_70744_aE;
-    protected float field_110153_bc;
+    public float field_110153_bc;
     protected boolean field_70703_bu;
     public float field_70702_br;
     public float field_70701_bs;
@@ -138,9 +130,9 @@
     protected double field_184625_bj;
     protected double field_184626_bk;
     protected double field_70709_bj;
-    private boolean field_70752_e = true;
-    private EntityLivingBase field_70755_b;
-    private int field_70756_c;
+    public boolean field_70752_e = true;
+    public EntityLivingBase field_70755_b;
+    public int field_70756_c;
     private EntityLivingBase field_110150_bn;
     private int field_142016_bo;
     private float field_70746_aG;
@@ -153,6 +145,26 @@
     private DamageSource field_189750_bF;
     private long field_189751_bG;
 
+    // CraftBukkit start
+    public int expToDrop;
+    public int maxAirTicks = 300;
+    public boolean forceDrops;
+    public ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<>();
+    public CraftAttributeMap craftAttributes;
+    public boolean collides = true;
+    public boolean canPickUpLoot;
+    // CraftBukkit end
+    public boolean silentDeath = false; // Paper - mark entity as dying silently for cancellable death event
+
+
+    // Spigot start
+    public void inactiveTick()
+    {
+        super.inactiveTick();
+        ++this.field_70708_bq; // Above all the floats
+    }
+    // Spigot end
+
     public void func_174812_G()
     {
         this.func_70097_a(DamageSource.field_76380_i, Float.MAX_VALUE);
@@ -162,7 +174,9 @@
     {
         super(p_i1594_1_);
         this.func_110147_ax();
-        this.func_70606_j(this.func_110138_aP());
+        // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
+        // this.setHealth(this.getMaxHealth());
+        this.field_70180_af.func_187227_b(EntityLiving.field_184632_c, (float) this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111126_e());
         this.field_70156_m = true;
         this.field_70770_ap = (float)((Math.random() + 1.0D) * 0.009999999776482582D);
         this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
@@ -188,6 +202,7 @@
         this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111263_d);
         this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_188791_g);
         this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_189429_h);
+        this.func_110140_aT().func_111150_b(SWIM_SPEED);
     }
 
     protected void func_184231_a(double p_184231_1_, boolean p_184231_3_, IBlockState p_184231_4_, BlockPos p_184231_5_)
@@ -201,11 +216,21 @@
         {
             float f = (float)MathHelper.func_76123_f(this.field_70143_R - 3.0F);
 
-            if (p_184231_4_.func_185904_a() != Material.field_151579_a)
+            if (!p_184231_4_.func_177230_c().isAir(p_184231_4_, field_70170_p, p_184231_5_))
             {
                 double d0 = Math.min((double)(0.2F + f / 15.0F), 2.5D);
                 int i = (int)(150.0D * d0);
-                ((WorldServer)this.field_70170_p).func_175739_a(EnumParticleTypes.BLOCK_DUST, this.field_70165_t, this.field_70163_u, this.field_70161_v, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, Block.func_176210_f(p_184231_4_));
+                if (!p_184231_4_.func_177230_c().addLandingEffects(p_184231_4_, (WorldServer)this.field_70170_p, p_184231_5_, p_184231_4_, this, i)) {
+                    // ((WorldServer) this.world).spawnParticle(EnumParticleTypes.BLOCK_DUST, this.posX, this.posY, this.posZ, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, Block.getStateId(state));
+                    // TODO: Is it correct to perform this code inside this if-statement?
+                    // CraftBukkit start - visiblity api
+                    if (this instanceof EntityPlayer) {
+                        ((WorldServer) this.field_70170_p).sendParticles((EntityPlayerMP) this, EnumParticleTypes.BLOCK_DUST, false, this.field_70165_t, this.field_70163_u, this.field_70161_v, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, new int[]{Block.func_176210_f(p_184231_4_)});
+                    } else {
+                        ((WorldServer) this.field_70170_p).func_175739_a(EnumParticleTypes.BLOCK_DUST, this.field_70165_t, this.field_70163_u, this.field_70161_v, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, new int[]{Block.func_176210_f(p_184231_4_)});
+                    }
+                    // CraftBukkit end
+                }
             }
         }
 
@@ -255,9 +280,13 @@
 
         if (this.func_70089_S())
         {
-            if (!this.func_70055_a(Material.field_151586_h))
-            {
-                this.func_70050_g(300);
+            if (!this.func_70055_a(Material.field_151586_h)) {
+                // this.setAir(300);
+                // CraftBukkit start - Only set if needed to work around a DataWatcher inefficiency
+                if (this.func_70086_ai() != 300) {
+                    this.func_70050_g(maxAirTicks);
+                }
+                // CraftBukkit end
             }
             else
             {
@@ -281,7 +310,7 @@
                     }
                 }
 
-                if (!this.field_70170_p.field_72995_K && this.func_184218_aH() && this.func_184187_bx() instanceof EntityLivingBase)
+                if (!this.field_70170_p.field_72995_K && this.func_184218_aH() && this.func_184187_bx() != null && this.func_184187_bx().shouldDismountInWater(this))
                 {
                     this.func_184210_p();
                 }
@@ -356,6 +385,18 @@
         this.field_70170_p.field_72984_F.func_76319_b();
     }
 
+    // CraftBukkit start
+    public int getExpReward() {
+        int exp = this.func_70693_a(this.field_70717_bb);
+
+        if (!this.field_70170_p.field_72995_K && (this.field_70718_bc > 0 || this.func_70684_aJ()) && this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot")) {
+            return exp;
+        } else {
+            return 0;
+        }
+    }
+    // CraftBukkit end
+
     protected void func_184594_b(BlockPos p_184594_1_)
     {
         int i = EnchantmentHelper.func_185284_a(Enchantments.field_185301_j, this);
@@ -375,19 +416,18 @@
     {
         ++this.field_70725_aQ;
 
-        if (this.field_70725_aQ == 20)
+        if (this.field_70725_aQ >= 20 && !this.field_70128_L) // CraftBukkit - (this.deathTime == 20) -> (this.deathTime >= 20 && !this.isDead)
         {
-            if (!this.field_70170_p.field_72995_K && (this.func_70684_aJ() || this.field_70718_bc > 0 && this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot")))
-            {
-                int i = this.func_70693_a(this.field_70717_bb);
-
+            // if (!this.world.isRemote && (this.isPlayer() || this.recentlyHit > 0 && this.canDropLoot() && this.world.getGameRules().getBoolean("doMobLoot"))) {
+                int i = this.expToDrop;
+                i = net.minecraftforge.event.ForgeEventFactory.getExperienceDrop(this, this.field_70717_bb, i);
                 while (i > 0)
                 {
                     int j = EntityXPOrb.func_70527_a(i);
                     i -= j;
                     this.field_70170_p.func_72838_d(new EntityXPOrb(this.field_70170_p, this.field_70165_t, this.field_70163_u, this.field_70161_v, j));
                 }
-            }
+            this.expToDrop = 0;
 
             this.func_70106_y();
 
@@ -442,6 +482,7 @@
     {
         this.field_70755_b = p_70604_1_;
         this.field_70756_c = this.field_70173_aa;
+        net.minecraftforge.common.ForgeHooks.onLivingSetAttackTarget(this, p_70604_1_);
     }
 
     public EntityLivingBase func_110144_aD()
@@ -563,6 +604,17 @@
             }
         }
 
+        // CraftBukkit start
+        if (p_70037_1_.func_74764_b("Bukkit.MaxHealth")) {
+            NBTBase nbtbase = p_70037_1_.func_74781_a("Bukkit.MaxHealth");
+            if (nbtbase.func_74732_a() == 5) {
+                this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(((NBTTagFloat) nbtbase).func_150286_g());
+            } else if (nbtbase.func_74732_a() == 3) {
+                this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(((NBTTagInt) nbtbase).func_150286_g());
+            }
+        }
+        // CraftBukkit end
+
         if (p_70037_1_.func_150297_b("Health", 99))
         {
             this.func_70606_j(p_70037_1_.func_74760_g("Health"));
@@ -589,9 +641,15 @@
         }
     }
 
+    // CraftBukkit start
+    private boolean isTickingEffects = false;
+    private List<Object> effectsToProcess = Lists.newArrayList();
+    // CraftBukkit end
+
     protected void func_70679_bo()
     {
         Iterator<Potion> iterator = this.field_70713_bf.keySet().iterator();
+        isTickingEffects = true; // CraftBukkit
 
         try
         {
@@ -602,7 +660,7 @@
 
                 if (!potioneffect.func_76455_a(this))
                 {
-                    if (!this.field_70170_p.field_72995_K)
+                    if (!this.field_70170_p.field_72995_K && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionExpiryEvent(this, potioneffect)))
                     {
                         iterator.remove();
                         this.func_70688_c(potioneffect);
@@ -619,6 +677,18 @@
             ;
         }
 
+        // CraftBukkit start
+        isTickingEffects = false;
+        for (Object e : effectsToProcess) {
+            if (e instanceof PotionEffect) {
+                func_70690_d((PotionEffect) e);
+            } else {
+                func_184589_d((Potion) e);
+            }
+        }
+        effectsToProcess.clear();
+        // CraftBukkit end
+
         if (this.field_70752_e)
         {
             if (!this.field_70170_p.field_72995_K)
@@ -670,8 +740,10 @@
         else
         {
             Collection<PotionEffect> collection = this.field_70713_bf.values();
-            this.field_70180_af.func_187227_b(field_184634_g, Boolean.valueOf(func_184593_a(collection)));
-            this.field_70180_af.func_187227_b(field_184633_f, Integer.valueOf(PotionUtils.func_185181_a(collection)));
+            net.minecraftforge.event.entity.living.PotionColorCalculationEvent event = new net.minecraftforge.event.entity.living.PotionColorCalculationEvent(this, PotionUtils.func_185181_a(collection), func_184593_a(collection), collection);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+            this.field_70180_af.func_187227_b(field_184634_g, event.areParticlesHidden());
+            this.field_70180_af.func_187227_b(field_184633_f, event.getColor());
             this.func_82142_c(this.func_70644_a(MobEffects.field_76441_p));
         }
     }
@@ -703,7 +775,11 @@
 
             while (iterator.hasNext())
             {
-                this.func_70688_c(iterator.next());
+                PotionEffect effect = iterator.next();
+                if(net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, effect))) continue;
+
+                this.func_70688_c(effect);
+
                 iterator.remove();
             }
         }
@@ -732,10 +808,17 @@
 
     public void func_70690_d(PotionEffect p_70690_1_)
     {
+        // CraftBukkit start
+        if (isTickingEffects) {
+            effectsToProcess.add(p_70690_1_);
+            return;
+        }
+        // CraftBukkit end
         if (this.func_70687_e(p_70690_1_))
         {
             PotionEffect potioneffect = this.field_70713_bf.get(p_70690_1_.func_188419_a());
 
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionAddedEvent(this, potioneffect, p_70690_1_));
             if (potioneffect == null)
             {
                 this.field_70713_bf.put(p_70690_1_.func_188419_a(), p_70690_1_);
@@ -751,6 +834,9 @@
 
     public boolean func_70687_e(PotionEffect p_70687_1_)
     {
+        net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent event = new net.minecraftforge.event.entity.living.PotionEvent.PotionApplicableEvent(this, p_70687_1_);
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+        if (event.getResult() != net.minecraftforge.fml.common.eventhandler.Event.Result.DEFAULT) return event.getResult() == net.minecraftforge.fml.common.eventhandler.Event.Result.ALLOW;
         if (this.func_70668_bt() == EnumCreatureAttribute.UNDEAD)
         {
             Potion potion = p_70687_1_.func_188419_a();
@@ -772,11 +858,18 @@
     @Nullable
     public PotionEffect func_184596_c(@Nullable Potion p_184596_1_)
     {
+        // CraftBukkit start
+        if (isTickingEffects) {
+            effectsToProcess.add(p_184596_1_);
+            return null;
+        }
+        // CraftBukkit end
         return this.field_70713_bf.remove(p_184596_1_);
     }
 
     public void func_184589_d(Potion p_184589_1_)
     {
+        if(net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.PotionEvent.PotionRemoveEvent(this, p_184589_1_))) return;
         PotionEffect potioneffect = this.func_184596_c(p_184589_1_);
 
         if (potioneffect != null)
@@ -817,28 +910,67 @@
         }
     }
 
+    // Magma start - Move RegainReason to a different constructor
+    private EntityRegainHealthEvent.RegainReason regainReason;
+    public void prepareHeal(EntityRegainHealthEvent.RegainReason regainReason) {
+        this.regainReason = regainReason;
+    }
+    // Magma end
     public void func_70691_i(float p_70691_1_)
     {
+        if (regainReason == null) regainReason = EntityRegainHealthEvent.RegainReason.CUSTOM;
+        p_70691_1_ = net.minecraftforge.event.ForgeEventFactory.onLivingHeal(this, p_70691_1_);
+        if (p_70691_1_ <= 0) return;
         float f = this.func_110143_aJ();
 
         if (f > 0.0F)
         {
-            this.func_70606_j(f + p_70691_1_);
+            // this.setHealth(f + healAmount);
+            EntityRegainHealthEvent event = new EntityRegainHealthEvent(this.getBukkitEntity(), p_70691_1_, regainReason);
+            this.field_70170_p.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                this.func_70606_j((float) (this.func_110143_aJ() + event.getAmount()));
+            }
         }
+
+        regainReason = null;
     }
 
     public final float func_110143_aJ()
     {
+        // CraftBukkit start - Use unscaled health
+        if (this instanceof EntityPlayer) {
+            return (float) ((EntityPlayer) this).getBukkitEntity().getHealth();
+        }
+        // CraftBukkit end
         return ((Float)this.field_70180_af.func_187225_a(field_184632_c)).floatValue();
     }
 
     public void func_70606_j(float p_70606_1_)
     {
+        // CraftBukkit start - Handle scaled health
+        if (this instanceof EntityPlayerMP && ((EntityPlayerMP)this).func_146103_bH() != null) {
+            CraftPlayer player = ((EntityPlayerMP) this).getBukkitEntity();
+            // Squeeze
+            if (p_70606_1_ < 0.0F) {
+                player.setRealHealth(0.0D);
+            } else if (p_70606_1_ > player.getMaxHealth()) {
+                player.setRealHealth(player.getMaxHealth());
+            } else {
+                player.setRealHealth(p_70606_1_);
+            }
+
+            player.updateScaledHealth();
+            return;
+        }
+        // CraftBukkit end
         this.field_70180_af.func_187227_b(field_184632_c, Float.valueOf(MathHelper.func_76131_a(p_70606_1_, 0.0F, this.func_110138_aP())));
     }
 
     public boolean func_70097_a(DamageSource p_70097_1_, float p_70097_2_)
     {
+        if (!net.minecraftforge.common.ForgeHooks.onLivingAttack(this, p_70097_1_, p_70097_2_)) return false;
         if (this.func_180431_b(p_70097_1_))
         {
             return false;
@@ -863,15 +995,17 @@
             {
                 float f = p_70097_2_;
 
-                if ((p_70097_1_ == DamageSource.field_82728_o || p_70097_1_ == DamageSource.field_82729_p) && !this.func_184582_a(EntityEquipmentSlot.HEAD).func_190926_b())
+                // CraftBukkit - Moved into damageEntity_CB(DamageSource, float)
+                if (false && (p_70097_1_ == DamageSource.field_82728_o || p_70097_1_ == DamageSource.field_82729_p) && !this.func_184582_a(EntityEquipmentSlot.HEAD).func_190926_b())
                 {
                     this.func_184582_a(EntityEquipmentSlot.HEAD).func_77972_a((int)(p_70097_2_ * 4.0F + this.field_70146_Z.nextFloat() * p_70097_2_ * 2.0F), this);
                     p_70097_2_ *= 0.75F;
                 }
 
-                boolean flag = false;
+                boolean flag = p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_); // Copied from below
 
-                if (p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_))
+                // CraftBukkit - Moved into damageEntity_CB(DamageSource, float)
+                if (false && p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_))
                 {
                     this.func_184590_k(p_70097_2_);
                     p_70097_2_ = 0.0F;
@@ -896,22 +1030,42 @@
                 {
                     if (p_70097_2_ <= this.field_110153_bc)
                     {
+                        this.forceExplosionKnockback = true; // CraftBukkit - SPIGOT-949 - for vanilla consistency, cooldown does not prevent explosion knockback
                         return false;
                     }
 
-                    this.func_70665_d(p_70097_1_, p_70097_2_ - this.field_110153_bc);
+                    // CraftBukkit start
+                    if (!this.damageEntity_CB(p_70097_1_, p_70097_2_ - this.field_110153_bc)) {
+                        return false;
+                    }
+                    // CraftBukkit end
                     this.field_110153_bc = p_70097_2_;
                     flag1 = false;
                 }
                 else
                 {
+                    // CraftBukkit start
+                    if (!this.damageEntity_CB(p_70097_1_, p_70097_2_)) {
+                        return false;
+                    }
+                    // CraftBukkit end
                     this.field_110153_bc = p_70097_2_;
                     this.field_70172_ad = this.field_70771_an;
-                    this.func_70665_d(p_70097_1_, p_70097_2_);
                     this.field_70738_aO = 10;
                     this.field_70737_aN = this.field_70738_aO;
                 }
 
+                // CraftBukkit start
+                if (this instanceof EntityAnimal) {
+                    ((EntityAnimal) this).func_70875_t();
+                    if (this instanceof EntityTameable) {
+                        if (((EntityTameable) this).func_70907_r() == null)
+                            ((EntityTameable) this).setAISit(new EntityAISit((EntityTameable) this));
+                        ((EntityTameable) this).func_70907_r().func_75270_a(false);
+                    }
+                }
+                // CraftBukkit end
+
                 this.field_70739_aP = 0.0F;
                 Entity entity1 = p_70097_1_.func_76346_g();
 
@@ -927,9 +1081,9 @@
                         this.field_70718_bc = 100;
                         this.field_70717_bb = (EntityPlayer)entity1;
                     }
-                    else if (entity1 instanceof EntityWolf)
+                    else if (entity1 instanceof EntityTameable)
                     {
-                        EntityWolf entitywolf = (EntityWolf)entity1;
+                        EntityTameable entitywolf = (EntityTameable)entity1;
 
                         if (entitywolf.func_70909_n())
                         {
@@ -997,14 +1151,10 @@
                 {
                     if (!this.func_190628_d(p_70097_1_))
                     {
-                        SoundEvent soundevent = this.func_184615_bR();
+                        this.silentDeath = !flag1; // mark entity as dying silently
 
-                        if (flag1 && soundevent != null)
-                        {
-                            this.func_184185_a(soundevent, this.func_70599_aP(), this.func_70647_i());
-                        }
-
                         this.func_70645_a(p_70097_1_);
+                        this.silentDeath = false; // Paper - cancellable death event - reset to default
                     }
                 }
                 else if (flag1)
@@ -1049,22 +1199,30 @@
         else
         {
             ItemStack itemstack = null;
+            // CraftBukkit start
+            ItemStack itemstack1 = ItemStack.field_190927_a;
 
             for (EnumHand enumhand : EnumHand.values())
             {
-                ItemStack itemstack1 = this.func_184586_b(enumhand);
+                itemstack1 = this.func_184586_b(enumhand);
 
                 if (itemstack1.func_77973_b() == Items.field_190929_cY)
                 {
                     itemstack = itemstack1.func_77946_l();
-                    itemstack1.func_190918_g(1);
+//                    itemstack1.shrink(1); // CraftBukkit
                     break;
                 }
             }
 
-            if (itemstack != null)
-            {
-                if (this instanceof EntityPlayerMP)
+            EntityResurrectEvent event = new EntityResurrectEvent((LivingEntity) this.getBukkitEntity());
+            event.setCancelled(itemstack == null);
+            this.field_70170_p.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                if (!itemstack1.func_190926_b()) {
+                    itemstack1.func_190918_g(1);
+                }
+                if (itemstack != null && this instanceof EntityPlayerMP)
                 {
                     EntityPlayerMP entityplayermp = (EntityPlayerMP)this;
                     entityplayermp.func_71029_a(StatList.func_188057_b(Items.field_190929_cY));
@@ -1078,7 +1236,8 @@
                 this.field_70170_p.func_72960_a(this, (byte)35);
             }
 
-            return itemstack != null;
+//            return itemstack != null;
+            return !event.isCancelled();
         }
     }
 
@@ -1127,7 +1286,7 @@
 
     public void func_70669_a(ItemStack p_70669_1_)
     {
-        this.func_184185_a(SoundEvents.field_187635_cQ, 0.8F, 0.8F + this.field_70170_p.field_73012_v.nextFloat() * 0.4F);
+        this.field_70170_p.func_184148_a(null, this.field_70165_t, this.field_70163_u, this.field_70161_v, SoundEvents.field_187635_cQ, this.func_184176_by(), 0.8F, 0.8F + this.field_70170_p.field_73012_v.nextFloat() * 0.4F); //Forge: Fix MC-2518 Items are not damaged on the client so client needs packet as well.
 
         for (int i = 0; i < 5; ++i)
         {
@@ -1139,47 +1298,81 @@
             vec3d1 = vec3d1.func_178789_a(-this.field_70125_A * 0.017453292F);
             vec3d1 = vec3d1.func_178785_b(-this.field_70177_z * 0.017453292F);
             vec3d1 = vec3d1.func_72441_c(this.field_70165_t, this.field_70163_u + (double)this.func_70047_e(), this.field_70161_v);
-            this.field_70170_p.func_175688_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, Item.func_150891_b(p_70669_1_.func_77973_b()));
+            if (this.field_70170_p instanceof WorldServer) //Forge: Fix MC-2518 spawnParticle is nooped on server, need to use server specific variant
+                ((WorldServer)this.field_70170_p).func_175739_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, 0,  vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, 0.0D, Item.func_150891_b(p_70669_1_.func_77973_b()), p_70669_1_.func_77960_j());
+            else //Fix the fact that spawning ItemCrack uses TWO arguments.
+                this.field_70170_p.func_175688_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, Item.func_150891_b(p_70669_1_.func_77973_b()), p_70669_1_.func_77960_j());
+
         }
     }
 
     public void func_70645_a(DamageSource p_70645_1_)
     {
+        if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_70645_1_)) return;
         if (!this.field_70729_aU)
         {
             Entity entity = p_70645_1_.func_76346_g();
             EntityLivingBase entitylivingbase = this.func_94060_bK();
 
-            if (this.field_70744_aE >= 0 && entitylivingbase != null)
-            {
-                entitylivingbase.func_191956_a(this, this.field_70744_aE, p_70645_1_);
-            }
-
-            if (entity != null)
-            {
-                entity.func_70074_a(this);
-            }
-
             this.field_70729_aU = true;
-            this.func_110142_aN().func_94549_h();
-
+            org.bukkit.event.entity.EntityDeathEvent deathEvent = null;
             if (!this.field_70170_p.field_72995_K)
             {
-                int i = 0;
+                int i = net.minecraftforge.common.ForgeHooks.getLootingLevel(this, entity, p_70645_1_);
 
-                if (entity instanceof EntityPlayer)
-                {
-                    i = EnchantmentHelper.func_185283_h((EntityLivingBase)entity);
-                }
+                captureDrops = true;
+                capturedDrops.clear();
 
                 if (this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot"))
                 {
                     boolean flag = this.field_70718_bc > 0;
                     this.func_184610_a(flag, i, p_70645_1_);
                 }
+
+                captureDrops = false;
+
+                if (!net.minecraftforge.common.ForgeHooks.onLivingDrops(this, p_70645_1_, capturedDrops, i, field_70718_bc > 0))
+                {
+                    if (this.capturedDrops.size() > 0)
+                    {
+                      for(EntityItem item: capturedDrops)
+                      {
+                          this.drops.add(CraftItemStack.asCraftMirror(item.func_92059_d()));
+                      }
+                        deathEvent = CraftEventFactory.callEntityDeathEvent(this, this.drops); // Paper - cancellable death event
+                    }
+                    else
+                    {
+                        deathEvent = CraftEventFactory.callEntityDeathEvent(this); // Paper - cancellable death event
+                        // CraftBukkit end
+                	}
+
+                    for (EntityItem item : capturedDrops)
+                    {
+                        field_70170_p.func_72838_d(item);
+                    }
+                }
             }
 
+            // Paper start - cancellable death event
+            if (deathEvent == null || !deathEvent.isCancelled()) {
+                // triggers and stats got moved down
+                if (this.field_70744_aE >= 0 && entitylivingbase != null) {
+                    entitylivingbase.func_191956_a(this, this.field_70744_aE, p_70645_1_);
+                }
+
+                if (entity != null) {
+                    entity.func_70074_a(this);
+                }
+
+                this.func_110142_aN().func_94549_h();
+                this.field_70729_aU = true;
             this.field_70170_p.func_72960_a(this, (byte)3);
+            } else {
+                this.field_70729_aU = false; // Paper - reset if cancelled
+                this.func_70606_j((float) deathEvent.getReviveHealth());
+            }
+            // Paper end
         }
     }
 
@@ -1195,10 +1388,20 @@
 
     public void func_70653_a(Entity p_70653_1_, float p_70653_2_, double p_70653_3_, double p_70653_5_)
     {
+        net.minecraftforge.event.entity.living.LivingKnockBackEvent event = net.minecraftforge.common.ForgeHooks.onLivingKnockBack(this, p_70653_1_, p_70653_2_, p_70653_3_, p_70653_5_);
+        if(event.isCanceled()) return;
+        p_70653_2_ = event.getStrength(); p_70653_3_ = event.getRatioX(); p_70653_5_ = event.getRatioZ();
         if (this.field_70146_Z.nextDouble() >= this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e())
         {
             this.field_70160_al = true;
             float f = MathHelper.func_76133_a(p_70653_3_ * p_70653_3_ + p_70653_5_ * p_70653_5_);
+
+            // Paper start - preserve old velocity
+            double oldMotX = this.field_70159_w;
+            double oldMotY = this.field_70181_x;
+            double oldMotZ = this.field_70179_y;
+            // Paper end
+
             this.field_70159_w /= 2.0D;
             this.field_70179_y /= 2.0D;
             this.field_70159_w -= p_70653_3_ / (double)f * (double)p_70653_2_;
@@ -1214,6 +1417,19 @@
                     this.field_70181_x = 0.4000000059604645D;
                 }
             }
+
+            // Paper start - call EntityKnockbackByEntityEvent
+            org.bukkit.util.Vector delta = new org.bukkit.util.Vector(this.field_70159_w - oldMotX, this.field_70181_x - oldMotY, this.field_70179_y - oldMotZ);
+            // Restore old velocity to be able to access it in the event
+            this.field_70159_w = oldMotX;
+            this.field_70181_x = oldMotY;
+            this.field_70179_y = oldMotZ;
+            if (p_70653_1_ == null || new com.destroystokyo.paper.event.entity.EntityKnockbackByEntityEvent((LivingEntity) getBukkitEntity(), p_70653_1_.getBukkitEntity(), f, delta).callEvent()) {
+                this.field_70159_w += delta.getX();
+                this.field_70181_x += delta.getY();
+                this.field_70179_y += delta.getZ();
+            }
+            // Paper end
         }
     }
 
@@ -1223,6 +1439,7 @@
         return SoundEvents.field_187543_bD;
     }
 
+    @Nullable public SoundEvent getDeathSoundEffect() { return func_184615_bR();} // Paper - OBFHELPER
     @Nullable
     protected SoundEvent func_184615_bR()
     {
@@ -1253,15 +1470,7 @@
             BlockPos blockpos = new BlockPos(i, j, k);
             IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
             Block block = iblockstate.func_177230_c();
-
-            if (block != Blocks.field_150468_ap && block != Blocks.field_150395_bd)
-            {
-                return block instanceof BlockTrapDoor && this.func_184604_a(blockpos, iblockstate);
-            }
-            else
-            {
-                return true;
-            }
+            return net.minecraftforge.common.ForgeHooks.isLivingOnLadder(iblockstate, field_70170_p, new BlockPos(i, j, k), this);
         }
     }
 
@@ -1287,6 +1496,9 @@
 
     public void func_180430_e(float p_180430_1_, float p_180430_2_)
     {
+        float[] ret = net.minecraftforge.common.ForgeHooks.onLivingFall(this, p_180430_1_, p_180430_2_);
+        if (ret == null) return;
+        p_180430_1_ = ret[0]; p_180430_2_ = ret[1];
         super.func_180430_e(p_180430_1_, p_180430_2_);
         PotionEffect potioneffect = this.func_70660_b(MobEffects.field_76430_j);
         float f = potioneffect == null ? 0.0F : (float)(potioneffect.func_76458_c() + 1);
@@ -1294,8 +1506,13 @@
 
         if (i > 0)
         {
+            // CraftBukkit start
+            if (!this.func_70097_a(DamageSource.field_76379_h, (float) i)) {
+                return;
+            }
+            // CraftBukkit end
             this.func_184185_a(this.func_184588_d(i), 1.0F, 1.0F);
-            this.func_70097_a(DamageSource.field_76379_h, (float)i);
+//            this.attackEntityFrom(DamageSource.FALL, (float)i); // CraftBukkit - moved up
             int j = MathHelper.func_76128_c(this.field_70165_t);
             int k = MathHelper.func_76128_c(this.field_70163_u - 0.20000000298023224D);
             int l = MathHelper.func_76128_c(this.field_70161_v);
@@ -1303,7 +1520,7 @@
 
             if (iblockstate.func_185904_a() != Material.field_151579_a)
             {
-                SoundType soundtype = iblockstate.func_177230_c().func_185467_w();
+                SoundType soundtype = iblockstate.func_177230_c().getSoundType(iblockstate, field_70170_p, new BlockPos(j, k, l), this);
                 this.func_184185_a(soundtype.func_185842_g(), soundtype.func_185843_a() * 0.5F, soundtype.func_185847_b() * 0.75F);
             }
         }
@@ -1335,7 +1552,7 @@
     {
         if (!p_70655_1_.func_76363_c())
         {
-            this.func_70675_k(p_70655_2_);
+//            this.damageArmor(damage); // CraftBukkit - Moved into damageEntity0(DamageSource, float)
             p_70655_2_ = CombatRules.func_189427_a(p_70655_2_, (float)this.func_70658_aO(), (float)this.func_110148_a(SharedMonsterAttributes.field_189429_h).func_111126_e());
         }
 
@@ -1350,7 +1567,8 @@
         }
         else
         {
-            if (this.func_70644_a(MobEffects.field_76429_m) && p_70672_1_ != DamageSource.field_76380_i)
+            // CraftBukkit - Moved to damageEntity_CB(DamageSource, float)
+            if (false && this.func_70644_a(MobEffects.field_76429_m) && p_70672_1_ != DamageSource.field_76380_i)
             {
                 int i = (this.func_70660_b(MobEffects.field_76429_m).func_76458_c() + 1) * 5;
                 int j = 25 - i;
@@ -1378,22 +1596,164 @@
 
     protected void func_70665_d(DamageSource p_70665_1_, float p_70665_2_)
     {
-        if (!this.func_180431_b(p_70665_1_))
-        {
-            p_70665_2_ = this.func_70655_b(p_70665_1_, p_70665_2_);
-            p_70665_2_ = this.func_70672_c(p_70665_1_, p_70665_2_);
-            float f = p_70665_2_;
-            p_70665_2_ = Math.max(p_70665_2_ - this.func_110139_bj(), 0.0F);
-            this.func_110149_m(this.func_110139_bj() - (f - p_70665_2_));
+        this.damageEntity_CB(p_70665_1_, p_70665_2_);
+    }
 
-            if (p_70665_2_ != 0.0F)
-            {
-                float f1 = this.func_110143_aJ();
-                this.func_70606_j(f1 - p_70665_2_);
-                this.func_110142_aN().func_94547_a(p_70665_1_, f1, p_70665_2_);
-                this.func_110149_m(this.func_110139_bj() - p_70665_2_);
+    private EntityDamageEvent calculateDebuffsAndCallCB(final DamageSource damagesource, float f) {
+        final boolean human = this instanceof EntityPlayer;
+        final float originalDamage = f;
+        // Calculates the damage debuff that occurs when an entity has something on his/her head
+        Function<Double, Double> hardHat = f12 -> {
+            if ((damagesource == DamageSource.field_82728_o || damagesource == DamageSource.field_82729_p)
+                    && EntityLivingBase.this.func_184582_a(EntityEquipmentSlot.HEAD) != null) {
+                // Saves you from 1/4 damage
+                return -(f12 * 0.25F);
             }
+            return -0.0;
+        };
+        float hardHatModifier = hardHat.apply((double) f).floatValue();
+        f += hardHatModifier;
+
+        // Calculates the damage debuff that occurs when a player is blocking and can block the damage source
+        Function<Double, Double> blocking = f13 -> -((EntityLivingBase.this.func_184583_d(damagesource)) ? f13 : 0.0);
+        float blockingModifier = blocking.apply((double) f).floatValue();
+        f += blockingModifier;
+
+        // Calculates the damage debuff that occurs when a player (or entity) is wearing armor...this is damn problematic
+        Function<Double, Double> armor = f14 -> {
+            // Cauldron start - apply forge armor hook
+            if (human) {
+                return -(f14 - ISpecialArmor.ArmorProperties.applyArmor(EntityLivingBase.this, ((EntityPlayer) EntityLivingBase.this).field_71071_by.field_70460_b, damagesource, f14.floatValue()));
+            }
+            // Cauldron end
+            return -(f14 - EntityLivingBase.this.func_70655_b(damagesource, f14.floatValue()));
+        };
+        float armorModifier = armor.apply((double) f).floatValue();
+        f += armorModifier;
+
+        // Calculates potion effect debuffs
+        Function<Double, Double> resistance = f15 -> {
+            if (!damagesource.func_151517_h() && EntityLivingBase.this.func_70644_a(MobEffects.field_76429_m) && damagesource != DamageSource.field_76380_i) {
+                int i = (EntityLivingBase.this.func_70660_b(MobEffects.field_76429_m).func_76458_c() + 1) * 5;
+                int j = 25 - i;
+                float f1 = f15.floatValue() * (float) j;
+                return -(f15 - (f1 / 25.0F));
+            }
+            return -0.0;
+        };
+        float resistanceModifier = resistance.apply((double) f).floatValue();
+        f += resistanceModifier;
+
+        // Calculates other potion effect debuffs
+        Function<Double, Double> magic = new Function<Double, Double>() {
+            @Override
+            public Double apply(Double f) {
+                return -(f - EntityLivingBase.this.func_70672_c(damagesource, f.floatValue()));
+            }
+        };
+        float magicModifier = magic.apply((double) f).floatValue();
+        f += magicModifier;
+
+        // Calculates "damage absorption ability" debuffs
+        Function<Double, Double> absorption = new Function<Double, Double>() {
+            @Override
+            public Double apply(Double f) {
+                return -(Math.max(f - Math.max(f - EntityLivingBase.this.func_110139_bj(), 0.0F), 0.0F));
+            }
+        };
+        float absorptionModifier = absorption.apply((double) f).floatValue();
+
+        EntityDamageEvent event = CraftEventFactory.handleLivingEntityDamageEvent(this, damagesource, originalDamage, hardHatModifier, blockingModifier, armorModifier, resistanceModifier, magicModifier, absorptionModifier, hardHat, blocking, armor, resistance, magic, absorption);
+
+        return event;
+    }
+
+    // CraftBukkit start
+    protected boolean damageEntity_CB(final DamageSource damagesource, float f) { // void -> boolean, add final
+        if (!this.func_180431_b(damagesource)) {
+            // Check if entity is a "human" aka player
+            final boolean human = this instanceof EntityPlayer;
+            final float originalDamage = f;
+            // Cauldron start - apply forge damage hook
+            f = ForgeHooks.onLivingHurt(this, damagesource, f);
+            // If the damage is negative return true
+            if (f < 0) return true;
+            // Thermos detect null damage
+            final boolean nulldmg = f == 0;
+            // Cauldron end
+
+            EntityDamageEvent ede = calculateDebuffsAndCallCB(damagesource, f);
+
+            if (ede.isCancelled()) {
+                return false;
+            }
+            f = ForgeHooks.onLivingDamage(this, damagesource, (float) ede.getFinalDamage()); // Magma - Add Forge LivingDamageEvent
+
+            if (nulldmg) return true; // Preclude any stupidity with null head items
+
+            // Apply damage to helmet
+            if ((damagesource == DamageSource.field_82728_o || damagesource == DamageSource.field_82729_p) && this.func_184582_a(EntityEquipmentSlot.HEAD) != null) {
+                this.func_184582_a(EntityEquipmentSlot.HEAD).func_77972_a((int) (ede.getDamage() * 4.0F + this.field_70146_Z.nextFloat() * ede.getDamage() * 2.0F), this);
+            }
+
+            // Apply damage to armor
+            if (!damagesource.func_76363_c()) {
+                float armorDamage = (float) (ede.getDamage() + ede.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) + ede.getDamage(EntityDamageEvent.DamageModifier.HARD_HAT));
+                if (human) {
+                    EntityPlayer player = (EntityPlayer) this;
+                    armorDamage = ISpecialArmor.ArmorProperties.applyArmor(player, player.field_71071_by.field_70460_b, damagesource, armorDamage);
+                } else {
+                    this.func_70675_k(armorDamage);
+                }
+            }
+
+            // Apply blocking code // PAIL: steal from above
+            if (ede.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) < 0) {
+                this.func_184590_k((float) -ede.getDamage(EntityDamageEvent.DamageModifier.BLOCKING));
+                Entity entity = damagesource.func_76364_f();
+
+                if (entity instanceof EntityLivingBase) {
+                    this.func_190629_c((EntityLivingBase) entity);
+                }
+            }
+
+            float absorptionModifier = (float) -ede.getDamage(EntityDamageEvent.DamageModifier.ABSORPTION);
+            this.func_110149_m(Math.max(this.func_110139_bj() - absorptionModifier, 0.0F));
+            if (f != 0.0F || !human) {
+                if (human) {
+                    ((EntityPlayer) this).func_71020_j(damagesource.func_76345_d());
+                }
+                // CraftBukkit end
+                float f2 = this.func_110143_aJ();
+
+                this.func_70606_j(f2 - f);
+                this.func_110142_aN().func_94547_a(damagesource, f2, f);
+                // CraftBukkit start
+                if (!human) {
+                    this.func_110149_m(this.func_110139_bj() - f);
+                }
+                // CraftBukkit end
+                // CraftBukkit start
+                return true;
+            }else {
+                // Duplicate triggers if blocking
+                if (ede.getDamage(EntityDamageEvent.DamageModifier.BLOCKING) < 0) {
+                    if (this instanceof EntityPlayerMP) {
+                        CriteriaTriggers.field_192128_h.func_192200_a((EntityPlayerMP) this, damagesource, f, originalDamage, true);
+                    }
+
+                    if (damagesource.func_76346_g() instanceof EntityPlayerMP) {
+                        CriteriaTriggers.field_192127_g.func_192220_a((EntityPlayerMP) damagesource.func_76346_g(), this, damagesource, f, originalDamage, true);
+                    }
+
+                    return false;
+                } else {
+                    return originalDamage > 0;
+                }
+                // CraftBukkit end
+            }
         }
+        return false; // CraftBukkit
     }
 
     public CombatTracker func_110142_aN()
@@ -1447,6 +1807,11 @@
 
     public void func_184609_a(EnumHand p_184609_1_)
     {
+        ItemStack stack = this.func_184586_b(p_184609_1_);
+        if (!stack.func_190926_b())
+        {
+            if (stack.func_77973_b().onEntitySwing(this, stack)) return;
+        }
         if (!this.field_82175_bq || this.field_110158_av >= this.func_82166_i() / 2 || this.field_110158_av < 0)
         {
             this.field_110158_av = -1;
@@ -1570,6 +1935,7 @@
         if (this.field_110155_d == null)
         {
             this.field_110155_d = new AttributeMap();
+            this.craftAttributes = new CraftAttributeMap(field_110155_d); // CraftBukkit
         }
 
         return this.field_110155_d;
@@ -1650,11 +2016,13 @@
         }
     }
 
+    public float getDeathSoundVolume() { return func_70599_aP();} // Paper - OBFHELPER
     protected float func_70599_aP()
     {
         return 1.0F;
     }
 
+    public float getDeathSoundPitch() { return func_70647_i();} // Paper - OBFHELPER
     protected float func_70647_i()
     {
         return this.func_70631_g_() ? (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.5F : (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F;
@@ -1694,7 +2062,7 @@
 
                     if (!this.field_70170_p.func_184143_b(axisalignedbb1))
                     {
-                        if (this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u, d12)).func_185896_q())
+                        if (this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u, d12)).isSideSolid(field_70170_p, new BlockPos(d11, this.field_70163_u, d12), EnumFacing.UP))
                         {
                             this.func_70634_a(d11, this.field_70163_u + 1.0D, d12);
                             return;
@@ -1702,14 +2070,14 @@
 
                         BlockPos blockpos = new BlockPos(d11, this.field_70163_u - 1.0D, d12);
 
-                        if (this.field_70170_p.func_180495_p(blockpos).func_185896_q() || this.field_70170_p.func_180495_p(blockpos).func_185904_a() == Material.field_151586_h)
+                        if (this.field_70170_p.func_180495_p(blockpos).isSideSolid(field_70170_p, blockpos, EnumFacing.UP) || this.field_70170_p.func_180495_p(blockpos).func_185904_a() == Material.field_151586_h)
                         {
                             d1 = d11;
                             d13 = this.field_70163_u + 1.0D;
                             d14 = d12;
                         }
                     }
-                    else if (!this.field_70170_p.func_184143_b(axisalignedbb1.func_72317_d(0.0D, 1.0D, 0.0D)) && this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u + 1.0D, d12)).func_185896_q())
+                    else if (!this.field_70170_p.func_184143_b(axisalignedbb1.func_72317_d(0.0D, 1.0D, 0.0D)) && this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u + 1.0D, d12)).isSideSolid(field_70170_p, new BlockPos(d11, this.field_70163_u + 1.0D, d12), EnumFacing.UP))
                     {
                         d1 = d11;
                         d13 = this.field_70163_u + 2.0D;
@@ -1781,16 +2149,17 @@
         }
 
         this.field_70160_al = true;
+        net.minecraftforge.common.ForgeHooks.onLivingJump(this);
     }
 
     protected void func_70629_bd()
     {
-        this.field_70181_x += 0.03999999910593033D;
+        this.field_70181_x += 0.03999999910593033D * this.func_110148_a(SWIM_SPEED).func_111126_e();
     }
 
     protected void func_180466_bG()
     {
-        this.field_70181_x += 0.03999999910593033D;
+        this.field_70181_x += 0.03999999910593033D * this.func_110148_a(SWIM_SPEED).func_111126_e();
     }
 
     protected float func_189749_co()
@@ -1864,7 +2233,8 @@
 
                         if (this.field_70122_E && !this.field_70170_p.field_72995_K)
                         {
-                            this.func_70052_a(7, false);
+                            if (func_70083_f(7) && !CraftEventFactory.callToggleGlideEvent(this, false).isCancelled())
+                                this.func_70052_a(7, false);
                         }
                     }
                     else
@@ -1874,7 +2244,8 @@
 
                         if (this.field_70122_E)
                         {
-                            f6 = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos).func_177230_c().field_149765_K * 0.91F;
+                            IBlockState underState = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos);
+                            f6 = underState.func_177230_c().getSlipperiness(underState, this.field_70170_p, blockpos$pooledmutableblockpos, this) * 0.91F;
                         }
 
                         float f7 = 0.16277136F / (f6 * f6 * f6);
@@ -1894,7 +2265,8 @@
 
                         if (this.field_70122_E)
                         {
-                            f6 = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos.func_189532_c(this.field_70165_t, this.func_174813_aQ().field_72338_b - 1.0D, this.field_70161_v)).func_177230_c().field_149765_K * 0.91F;
+                            IBlockState underState = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos.func_189532_c(this.field_70165_t, this.func_174813_aQ().field_72338_b - 1.0D, this.field_70161_v));
+                            f6 = underState.func_177230_c().getSlipperiness(underState, this.field_70170_p, blockpos$pooledmutableblockpos, this) * 0.91F;
                         }
 
                         if (this.func_70617_f_())
@@ -2054,6 +2426,7 @@
 
     public void func_70071_h_()
     {
+        if (net.minecraftforge.common.ForgeHooks.onLivingUpdate(this)) return;
         super.func_70071_h_();
         this.func_184608_ct();
 
@@ -2096,7 +2469,9 @@
 
                 if (!ItemStack.func_77989_b(itemstack1, itemstack))
                 {
+                    if (!ItemStack.areItemStacksEqualUsingNBTShareTag(itemstack1, itemstack))
                     ((WorldServer)this.field_70170_p).func_73039_n().func_151247_a(this, new SPacketEntityEquipment(this.func_145782_y(), entityequipmentslot, itemstack1));
+                    net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent(this, entityequipmentslot, itemstack, itemstack1));
 
                     if (!itemstack.func_190926_b())
                     {
@@ -2304,7 +2679,6 @@
         }
 
         this.field_70170_p.field_72984_F.func_76320_a("ai");
-
         if (this.func_70610_aX())
         {
             this.field_70703_bu = false;
@@ -2385,6 +2759,7 @@
 
         if (!this.field_70170_p.field_72995_K)
         {
+            if (flag != this.func_70083_f(7) && !CraftEventFactory.callToggleGlideEvent(this, flag).isCancelled()) // CraftBukkit
             this.func_70052_a(7, flag);
         }
     }
@@ -2519,12 +2894,12 @@
 
     public boolean func_70067_L()
     {
-        return !this.field_70128_L;
+        return !this.field_70128_L && this.collides;
     }
 
     public boolean func_70104_M()
     {
-        return this.func_70089_S() && !this.func_70617_f_();
+        return this.func_70089_S() && !this.func_70617_f_() && this.collides; // CraftBukkit
     }
 
     protected void func_70018_K()
@@ -2575,6 +2950,40 @@
         this.field_70752_e = true;
     }
 
+    /***
+     * Removes all potion effects that have curativeItem as a curative item for its effect
+     * @param curativeItem The itemstack we are using to cure potion effects
+     */
+    public void curePotionEffects(ItemStack curativeItem)
+    {
+        if (field_70170_p.field_72995_K) return;
+        Iterator<PotionEffect> iterator = this.field_70713_bf.values().iterator();
+
+        while (iterator.hasNext())
+        {
+            PotionEffect effect = iterator.next();
+
+            if (effect.isCurativeItem(curativeItem) && !MinecraftForge.EVENT_BUS.post(new PotionRemoveEvent(this, effect)))
+            {
+                func_70688_c(effect);
+                iterator.remove();
+                this.field_70752_e = true;
+            }
+        }
+    }
+
+    /**
+     * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+     * currently only used in vanilla code by pigs.
+     *
+     * @param player The player who is riding the entity.
+     * @return If the player should orient the same direction as this entity.
+     */
+    public boolean shouldRiderFaceForward(EntityPlayer player)
+    {
+        return this instanceof net.minecraft.entity.passive.EntityPig;
+    }
+
     public abstract EnumHandSide func_184591_cq();
 
     public boolean func_184587_cr()
@@ -2592,15 +3001,24 @@
         if (this.func_184587_cr())
         {
             ItemStack itemstack = this.func_184586_b(this.func_184600_cs());
+            if (net.minecraftforge.common.ForgeHooks.canContinueUsing(this.field_184627_bm, itemstack))
+                this.field_184627_bm = itemstack;
 
             if (itemstack == this.field_184627_bm)
             {
+                if (!this.field_184627_bm.func_190926_b())
+                {
+                    field_184628_bn = net.minecraftforge.event.ForgeEventFactory.onItemUseTick(this, field_184627_bm, field_184628_bn);
+                    if (field_184628_bn > 0)
+                        field_184627_bm.func_77973_b().onUsingTick(field_184627_bm, this, field_184628_bn);
+                }
+
                 if (this.func_184605_cv() <= 25 && this.func_184605_cv() % 4 == 0)
                 {
                     this.func_184584_a(this.field_184627_bm, 5);
                 }
 
-                if (--this.field_184628_bn == 0 && !this.field_70170_p.field_72995_K)
+                if (--this.field_184628_bn <= 0 && !this.field_70170_p.field_72995_K)
                 {
                     this.func_71036_o();
                 }
@@ -2618,8 +3036,10 @@
 
         if (!itemstack.func_190926_b() && !this.func_184587_cr())
         {
+            int duration = net.minecraftforge.event.ForgeEventFactory.onItemUseStart(this, itemstack, itemstack.func_77988_m());
+            if (duration <= 0) return;
             this.field_184627_bm = itemstack;
-            this.field_184628_bn = itemstack.func_77988_m();
+            this.field_184628_bn = duration;
 
             if (!this.field_70170_p.field_72995_K)
             {
@@ -2700,7 +3120,27 @@
         if (!this.field_184627_bm.func_190926_b() && this.func_184587_cr())
         {
             this.func_184584_a(this.field_184627_bm, 16);
-            this.func_184611_a(this.func_184600_cs(), this.field_184627_bm.func_77950_b(this.field_70170_p, this));
+            ItemStack itemstack = this.field_184627_bm;
+
+            if (this instanceof EntityPlayer) {
+                org.bukkit.inventory.ItemStack craftItem = CraftItemStack.asBukkitCopy(itemstack);
+                PlayerItemConsumeEvent event = new PlayerItemConsumeEvent((Player) this.getBukkitEntity(), craftItem);
+                field_70170_p.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    // Update client
+                    ((EntityPlayerMP) this).getBukkitEntity().updateInventory();
+                    ((EntityPlayerMP) this).getBukkitEntity().updateScaledHealth();
+                    return;
+                }
+
+                itemstack = CraftItemStack.asNMSCopy(event.getItem());
+            }
+
+            ItemStack activeItemStackCopy = field_184627_bm.func_77946_l();
+            itemstack = itemstack.func_77950_b(field_70170_p, this);
+            itemstack = net.minecraftforge.event.ForgeEventFactory.onItemUseFinish(this, activeItemStackCopy, func_184605_cv(), itemstack);
+            this.func_184611_a(this.func_184600_cs(), itemstack);
             this.func_184602_cy();
         }
     }
@@ -2724,7 +3164,8 @@
     {
         if (!this.field_184627_bm.func_190926_b())
         {
-            this.field_184627_bm.func_77974_b(this.field_70170_p, this, this.func_184605_cv());
+            if (!net.minecraftforge.event.ForgeEventFactory.onUseItemStop(this, field_184627_bm, this.func_184605_cv()))
+                this.field_184627_bm.func_77974_b(this.field_70170_p, this, this.func_184605_cv());
         }
 
         this.func_184602_cy();
@@ -2808,12 +3249,17 @@
 
             if (flag1)
             {
-                this.func_70634_a(this.field_70165_t, this.field_70163_u, this.field_70161_v);
-
-                if (world.func_184144_a(this, this.func_174813_aQ()).isEmpty() && !world.func_72953_d(this.func_174813_aQ()))
-                {
-                    flag = true;
+                // CraftBukkit start - Teleport event
+                EntityTeleportEvent teleport = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.field_70170_p.getWorld(), d0, d1, d2), new Location(this.field_70170_p.getWorld(), this.field_70165_t, this.field_70163_u, this.field_70161_v));
+                this.field_70170_p.getServer().getPluginManager().callEvent(teleport);
+                if (!teleport.isCancelled()) {
+                    Location to = teleport.getTo();
+                    this.func_70634_a(to.getX(), to.getY(), to.getZ());
+                    if (world.func_184144_a(this, this.func_174813_aQ()).isEmpty() && !world.func_72953_d(this.func_174813_aQ())) {
+                        flag = true;
+                    }
                 }
+                // CraftBukkit end
             }
         }
 
@@ -2847,11 +3293,41 @@
         }
     }
 
+    @Override
+    public float getBukkitYaw() {
+        return func_70079_am();
+    }
+
     public boolean func_184603_cC()
     {
         return true;
     }
 
+    // FORGE
+    private final net.minecraftforge.items.IItemHandlerModifiable handHandler = new net.minecraftforge.items.wrapper.EntityHandsInvWrapper(this);
+    private final net.minecraftforge.items.IItemHandlerModifiable armorHandler = new net.minecraftforge.items.wrapper.EntityArmorInvWrapper(this);
+    private final net.minecraftforge.items.IItemHandler joinedHandler = new net.minecraftforge.items.wrapper.CombinedInvWrapper(armorHandler, handHandler);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable EnumFacing facing)
+    {
+        if (capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if (facing == null) return (T) joinedHandler;
+            else if (facing.func_176740_k().func_176720_b()) return (T) handHandler;
+            else if (facing.func_176740_k().func_176722_c()) return (T) armorHandler;
+        }
+        return super.getCapability(capability, facing);
+    }
+
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable EnumFacing facing)
+    {
+        return capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY || super.hasCapability(capability, facing);
+    }
+
     public boolean func_190631_cK()
     {
         return true;
@@ -2861,4 +3337,30 @@
     public void func_191987_a(BlockPos p_191987_1_, boolean p_191987_2_)
     {
     }
+
+    @Override
+    public void func_191958_b(float strafe, float up, float forward, float friction)
+    {
+        float f = strafe * strafe + up * up + forward * forward;
+        if (f >= 1.0E-4F)
+        {
+            f = MathHelper.func_76129_c(f);
+            if (f < 1.0F) f = 1.0F;
+            f = friction / f;
+            strafe = strafe * f;
+            up = up * f;
+            forward = forward * f;
+            if(this.func_70090_H() || this.func_180799_ab())
+            {
+                strafe = strafe * (float)this.func_110148_a(SWIM_SPEED).func_111126_e();
+                up = up * (float)this.func_110148_a(SWIM_SPEED).func_111126_e();
+                forward = forward * (float)this.func_110148_a(SWIM_SPEED).func_111126_e();
+            }
+            float f1 = MathHelper.func_76126_a(this.field_70177_z * 0.017453292F);
+            float f2 = MathHelper.func_76134_b(this.field_70177_z * 0.017453292F);
+            this.field_70159_w += (double)(strafe * f2 - forward * f1);
+            this.field_70181_x += (double)up;
+            this.field_70179_y += (double)(forward * f2 + strafe * f1);
+        }
+    }
\ No newline at end of file
 }

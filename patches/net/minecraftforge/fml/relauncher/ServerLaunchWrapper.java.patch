--- ../src-base/minecraft/net/minecraftforge/fml/relauncher/ServerLaunchWrapper.java
+++ ../src-work/minecraft/net/minecraftforge/fml/relauncher/ServerLaunchWrapper.java
@@ -19,58 +19,103 @@
 
 package net.minecraftforge.fml.relauncher;
 
+import org.magmafoundation.magma.betterui.BetterUI;
+import org.magmafoundation.magma.configuration.MagmaConfig;
+import org.magmafoundation.magma.downloads.MagmaUpdater;
+import org.magmafoundation.magma.libs.Dependencies;
+
+import java.io.IOException;
 import java.lang.reflect.Method;
+import java.nio.file.Paths;
+import java.util.Arrays;
+import java.util.List;
 
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.core.LoggerContext;
+import static org.magmafoundation.magma.MagmaConstants.*;
 
 public class ServerLaunchWrapper {
 
+    public static long beginTime;
+    public static List<String> LAUNCH_ARGS;
+
     /**
      * @param args
      */
-    public static void main(String[] args)
-    {
+    public static void main(String[] args) throws IOException {
+        LAUNCH_ARGS = Arrays.asList(args);
+
+        if (LAUNCH_ARGS.contains("-noui")) {
+            BetterUI.setEnabled(false);
+            LAUNCH_ARGS.remove("-noui");
+        }
+        if (LAUNCH_ARGS.contains("-nologo")) {
+            BetterUI.setEnableBigLogo(false);
+            LAUNCH_ARGS.remove("-nologo");
+        }
+
+        BetterUI.printTitle(NAME, BRAND, System.getProperty("java.version") + " (" + System.getProperty("java.vendor") + ")", VERSION, BUKKIT_VERSION, FORGE_VERSION);
+
+        if (getJavaVersion() > 8) {
+            System.err.println("WARNING: You are running a version of Java that is not supported by Magma.\nPlease download the latest version of Java 8 (https://www.java.com/en/download/).");
+            System.exit(-1);
+        }
+
+        if (!BetterUI.checkEula(Paths.get("eula.txt")))
+            System.exit(0);
+
+        Dependencies.start();
+
+        if (!LAUNCH_ARGS.contains("-dau") && MagmaConfig.instance.checkForUpdates.getValues()) {
+            System.out.println("Checking for updates...");
+            MagmaUpdater magmaUpdater = new MagmaUpdater();
+            if (magmaUpdater.versionChecker() && MagmaConfig.instance.magmaAutoUpdater.getValues()) {
+                magmaUpdater.downloadJar();
+            }
+        } else {
+            System.out.println("Update check disabled.");
+        }
+
         new ServerLaunchWrapper().run(args);
     }
 
-    private ServerLaunchWrapper()
-    {
+    public static int getJavaVersion() {
+        String version = System.getProperty("java.version");
+        if (version.startsWith("1.")) {
+            version = version.substring(2);
+        }
 
+        int dotPos = version.indexOf('.');
+        int dashPos = version.indexOf('-');
+        return Integer.parseInt(version.substring(0, dotPos > -1 ? dotPos : dashPos > -1 ? dashPos : 1));
     }
 
-    private void run(String[] args)
-    {
-        if (System.getProperty("log4j.configurationFile") == null)
-        {
+    private ServerLaunchWrapper() {
+
+    }
+
+    private void run(String[] args) {
+        if (System.getProperty("log4j.configurationFile") == null) {
             // Set this early so we don't need to reconfigure later
-            System.setProperty("log4j.configurationFile", "log4j2_server.xml");
+            System.setProperty("log4j.configurationFile", "log4j2_magma.xml");
         }
         Class<?> launchwrapper = null;
-        try
-        {
-            launchwrapper = Class.forName("net.minecraft.launchwrapper.Launch",true,getClass().getClassLoader());
-            Class.forName("org.objectweb.asm.Type",true,getClass().getClassLoader());
-        }
-        catch (Exception e)
-        {
+        try {
+            launchwrapper = Class.forName("net.minecraft.launchwrapper.Launch", true, getClass().getClassLoader());
+            Class.forName("org.objectweb.asm.Type", true, getClass().getClassLoader());
+        } catch (Exception e) {
             System.err.printf("We appear to be missing one or more essential library files.\n" +
-            		"You will need to add them to your server before FML and Forge will run successfully.");
-            e.printStackTrace(System.err);
-            System.exit(1);
+                    "You will need to add them to your server before FML and Forge will run successfully.");
+
         }
+        beginTime = System.nanoTime();
 
-        try
-        {
+        try {
             Method main = launchwrapper.getMethod("main", String[].class);
             String[] allArgs = new String[args.length + 2];
             allArgs[0] = "--tweakClass";
             allArgs[1] = "net.minecraftforge.fml.common.launcher.FMLServerTweaker";
             System.arraycopy(args, 0, allArgs, 2, args.length);
-            main.invoke(null,(Object)allArgs);
-        }
-        catch (Exception e)
-        {
+            main.invoke(null, (Object) allArgs);
+        } catch (Exception e) {
             System.err.printf("A problem occurred running the Server launcher.");
             e.printStackTrace(System.err);
             System.exit(1);

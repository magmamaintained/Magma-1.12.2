--- ../src-base/minecraft/net/minecraftforge/fml/common/Loader.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/Loader.java
@@ -69,6 +69,7 @@
 import net.minecraftforge.registries.GameData;
 import net.minecraftforge.registries.ObjectHolderRegistry;
 
+import net.minecraftforge.server.permission.PermissionAPI;
 import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.Level;
 
@@ -97,8 +98,11 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
+import org.magmafoundation.magma.api.ServerAPI;
 
 import javax.annotation.Nullable;
+import org.magmafoundation.magma.commands.permission.BukkitPermissionsHandler;
+import org.magmafoundation.magma.configuration.MagmaConfig;
 
 /**
  * The loader class performs the actual loading of the mod code from disk.
@@ -631,6 +635,10 @@
         FMLCommonHandler.instance().fireSidedRegistryEvents();
         ObjectHolderRegistry.INSTANCE.applyObjectHolders();
         ItemStackHolderInjector.INSTANCE.inject();
+        // Magma - Allow bukkit plugins to handle forge commands
+        if(MagmaConfig.instance.forgeBukkitPermissionHandlerEnable.getValues()){
+            PermissionAPI.setPermissionHandler(new BukkitPermissionsHandler());
+        }
         modController.transition(LoaderState.INITIALIZATION, false);
         progressBar.step("Initializing Minecraft Engine");
     }
@@ -757,6 +765,7 @@
         modController.distributeStateMessage(LoaderState.AVAILABLE);
         GameData.freezeData();
         FMLLog.log.info("Forge Mod Loader has successfully loaded {} mod{}", mods.size(), mods.size() == 1 ? "" : "s");
+        ServerAPI.mods.put("mods", mods.size());
         progressBar.step("Completing Minecraft initialization");
     }
 
@@ -904,8 +913,10 @@
             }
         }
 
-        if (difference.size() > 0)
+        if (difference.size() > 0){
+            ServerAPI.modList.addAll(difference);
             FMLLog.log.info("Attempting connection with missing mods {} at {}", difference, side);
+        }
         return true;
     }
 

--- ../src-base/minecraft/net/minecraft/item/ItemBow.java
+++ ../src-work/minecraft/net/minecraft/item/ItemBow.java
@@ -5,6 +5,7 @@
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.init.Enchantments;
 import net.minecraft.init.Items;
@@ -18,6 +19,9 @@
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
 
 public class ItemBow extends Item
 {
@@ -51,13 +55,13 @@
         });
     }
 
-    protected ItemStack findAmmo(EntityPlayer player)
+    protected ItemStack findAmmo(EntityPlayer player, ItemStack bow) // Paper
     {
-        if (this.isArrow(player.getHeldItem(EnumHand.OFF_HAND)))
+        if (this.isArrow(player, bow, player.getHeldItem(EnumHand.OFF_HAND))) // Paper
         {
             return player.getHeldItem(EnumHand.OFF_HAND);
         }
-        else if (this.isArrow(player.getHeldItem(EnumHand.MAIN_HAND)))
+        else if (this.isArrow(player, bow, player.getHeldItem(EnumHand.MAIN_HAND))) // Paper
         {
             return player.getHeldItem(EnumHand.MAIN_HAND);
         }
@@ -67,7 +71,7 @@
             {
                 ItemStack itemstack = player.inventory.getStackInSlot(i);
 
-                if (this.isArrow(itemstack))
+                if (this.isArrow(player, bow, itemstack))
                 {
                     return itemstack;
                 }
@@ -77,9 +81,17 @@
         }
     }
 
-    protected boolean isArrow(ItemStack stack)
+    // Paper start
+    protected boolean isArrow(EntityPlayer player, ItemStack bow, ItemStack stack)
     {
-        return stack.getItem() instanceof ItemArrow;
+        return stack.getItem() instanceof ItemArrow && (
+            !(player instanceof EntityPlayerMP) ||
+                new com.destroystokyo.paper.event.player.PlayerReadyArrowEvent(
+                    ((EntityPlayerMP) player).getBukkitEntity(),
+                    CraftItemStack.asCraftMirror(bow),
+                    CraftItemStack.asCraftMirror(stack)
+                ).callEvent());
+        // Paper end
     }
 
     public void onPlayerStoppedUsing(ItemStack stack, World worldIn, EntityLivingBase entityLiving, int timeLeft)
@@ -88,7 +100,7 @@
         {
             EntityPlayer entityplayer = (EntityPlayer)entityLiving;
             boolean flag = entityplayer.capabilities.isCreativeMode || EnchantmentHelper.getEnchantmentLevel(Enchantments.INFINITY, stack) > 0;
-            ItemStack itemstack = this.findAmmo(entityplayer);
+            ItemStack itemstack = this.findAmmo(entityplayer, stack); // Paper
 
             int i = this.getMaxItemUseDuration(stack) - timeLeft;
             i = net.minecraftforge.event.ForgeEventFactory.onArrowLoose(stack, worldIn, entityplayer, i, !itemstack.isEmpty() || flag);
@@ -107,6 +119,7 @@
                 {
                     boolean flag1 = entityplayer.capabilities.isCreativeMode || (itemstack.getItem() instanceof ItemArrow && ((ItemArrow) itemstack.getItem()).isInfinite(itemstack, stack, entityplayer));
 
+                    boolean consumeArrow = true; // Paper
                     if (!worldIn.isRemote)
                     {
                         ItemArrow itemarrow = (ItemArrow)(itemstack.getItem() instanceof ItemArrow ? itemstack.getItem() : Items.ARROW);
@@ -135,22 +148,41 @@
 
                         if (EnchantmentHelper.getEnchantmentLevel(Enchantments.FLAME, stack) > 0)
                         {
-                            entityarrow.setFire(100);
+                            // entityarrow.setFire(100);
+                            EntityCombustEvent event = new EntityCombustEvent(entityarrow.getBukkitEntity(), 100);
+                            entityarrow.world.getServer().getPluginManager().callEvent(event);
+
+                            if (!event.isCancelled()) {
+                                entityarrow.setFire(event.getDuration());
+                            }
                         }
+                        org.bukkit.event.entity.EntityShootBowEvent event = CraftEventFactory.callEntityShootBowEvent(entityplayer, stack, itemstack, entityarrow, f);
+                        if (event.isCancelled()) {
+                            event.getProjectile().remove();
+                            return;
+                        }
 
                         stack.damageItem(1, entityplayer);
-
-                        if (flag1 || entityplayer.capabilities.isCreativeMode && (itemstack.getItem() == Items.SPECTRAL_ARROW || itemstack.getItem() == Items.TIPPED_ARROW))
+                        consumeArrow = event.getConsumeArrow(); // Paper
+                        if (!consumeArrow || flag1 || entityplayer.capabilities.isCreativeMode && (itemstack.getItem() == Items.SPECTRAL_ARROW || itemstack.getItem() == Items.TIPPED_ARROW)) // Paper - add !consumeArrow
                         {
                             entityarrow.pickupStatus = EntityArrow.PickupStatus.CREATIVE_ONLY;
                         }
 
-                        worldIn.spawnEntity(entityarrow);
+                        // worldIn.spawnEntity(entityarrow);
+                        if (event.getProjectile() == entityarrow.getBukkitEntity()) {
+                            if (!worldIn.spawnEntity(entityarrow)) {
+                                if (entityplayer instanceof EntityPlayerMP) {
+                                    ((EntityPlayerMP) entityplayer).getBukkitEntity().updateInventory();
+                                }
+                                return;
+                            }
+                        }
                     }
 
                     worldIn.playSound((EntityPlayer)null, entityplayer.posX, entityplayer.posY, entityplayer.posZ, SoundEvents.ENTITY_ARROW_SHOOT, SoundCategory.PLAYERS, 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
 
-                    if (!flag1 && !entityplayer.capabilities.isCreativeMode)
+                    if (!flag1 && !entityplayer.capabilities.isCreativeMode && consumeArrow) // Paper
                     {
                         itemstack.shrink(1);
 
@@ -192,7 +224,7 @@
     public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn)
     {
         ItemStack itemstack = playerIn.getHeldItem(handIn);
-        boolean flag = !this.findAmmo(playerIn).isEmpty();
+        boolean flag = !this.findAmmo(playerIn, itemstack).isEmpty();
 
         ActionResult<ItemStack> ret = net.minecraftforge.event.ForgeEventFactory.onArrowNock(itemstack, worldIn, playerIn, handIn, flag);
         if (ret != null) return ret;

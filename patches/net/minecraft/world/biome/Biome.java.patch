--- ../src-base/minecraft/net/minecraft/world/biome/Biome.java
+++ ../src-work/minecraft/net/minecraft/world/biome/Biome.java
@@ -1,7 +1,7 @@
 package net.minecraft.world.biome;
 
 import com.google.common.collect.Lists;
-import java.util.Collections;
+
 import java.util.List;
 import java.util.Random;
 import javax.annotation.Nullable;
@@ -49,6 +49,7 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
 
 public abstract class Biome extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<Biome>
 {
@@ -182,7 +183,7 @@
                 return this.spawnableCaveCreatureList;
             default:
                 // Forge: Return a non-empty list for non-vanilla EnumCreatureTypes
-                if (!this.modSpawnableLists.containsKey(creatureType)) this.modSpawnableLists.put(creatureType, Lists.<Biome.SpawnListEntry>newArrayList());
+                if (!this.modSpawnableLists.containsKey(creatureType)) this.modSpawnableLists.put(creatureType, Lists.<SpawnListEntry>newArrayList());
                 return this.modSpawnableLists.get(creatureType);
         }
     }
@@ -251,8 +252,7 @@
 
         for (int j1 = 255; j1 >= 0; --j1)
         {
-            if (j1 <= rand.nextInt(5))
-            {
+            if (j1 <= (worldIn.paperConfig.generateFlatBedrock ? 0 : rand.nextInt(5))) { // Paper - Configurable flat bedrock
                 chunkPrimerIn.setBlockState(i1, j1, l, BEDROCK);
             }
             else
@@ -475,7 +475,8 @@
             return;
         }
 
-        world.setBlockState(pos, flower.state, 3);
+//        world.setBlockState(pos, flower.state, 3);
+        CraftEventFactory.handleBlockGrowEvent(world, pos.getX(), pos.getY(), pos.getZ(), flower.state.getBlock(), flower.state.getBlock().getMetaFromState(flower.state));
     }
 
     /* ========================================= FORGE END ======================================*/

--- ../src-base/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
+++ ../src-work/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
@@ -1,5 +1,7 @@
 package net.minecraft.world.gen.structure;
 
+import co.aikar.timings.MinecraftTimings;
+import co.aikar.timings.Timing;
 import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectIterator;
@@ -20,6 +22,7 @@
 
 public abstract class MapGenStructure extends MapGenBase
 {
+    private final Timing timing = MinecraftTimings.getStructureTiming(this); // Paper
     private MapGenStructureData structureData;
     protected Long2ObjectMap<StructureStart> structureMap = new Long2ObjectOpenHashMap<StructureStart>(1024);
 
@@ -79,6 +82,7 @@
 
     public synchronized boolean generateStructure(World worldIn, Random randomIn, ChunkPos chunkCoord)
     {
+        timing.startTiming(); // Paper
         this.initializeStructureData(worldIn);
         int i = (chunkCoord.x << 4) + 8;
         int j = (chunkCoord.z << 4) + 8;
@@ -97,6 +101,7 @@
                 this.setStructureStart(structurestart.getChunkPosX(), structurestart.getChunkPosZ(), structurestart);
             }
         }
+        timing.stopTiming(); // Paper
 
         return flag;
     }
@@ -175,8 +180,13 @@
     {
         if (this.structureData == null && worldIn != null)
         {
+            // Spigot Start
+            if (worldIn.spigotConfig.saveStructureInfo && !this.getStructureName().equals("Mineshaft")) { // // Cauldron
             this.structureData = (MapGenStructureData)worldIn.getPerWorldStorage().getOrLoadData(MapGenStructureData.class, this.getStructureName());
-
+            } else {
+                this.structureData = new MapGenStructureData(this.getStructureName());
+            }
+            // Spigot End
             if (this.structureData == null)
             {
                 this.structureData = new MapGenStructureData(this.getStructureName());

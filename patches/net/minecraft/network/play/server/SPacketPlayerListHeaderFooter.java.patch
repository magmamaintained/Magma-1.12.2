--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketPlayerListHeaderFooter.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketPlayerListHeaderFooter.java
@@ -1,44 +1,55 @@
 package net.minecraft.network.play.server;
 
 import java.io.IOException;
+
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
 import net.minecraft.util.text.ITextComponent;
+
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.chat.ComponentSerializer;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketPlayerListHeaderFooter implements Packet<INetHandlerPlayClient>
-{
-    private ITextComponent header;
-    private ITextComponent footer;
+public class SPacketPlayerListHeaderFooter implements Packet<INetHandlerPlayClient> {
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
-        this.header = buf.readTextComponent();
-        this.footer = buf.readTextComponent();
-    }
+	public BaseComponent[] header_paper, footer_paper; // Paper
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
-        buf.writeTextComponent(this.header);
-        buf.writeTextComponent(this.footer);
-    }
+	private ITextComponent header;
+	private ITextComponent footer;
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
-        handler.handlePlayerListHeaderFooter(this);
-    }
+	public void readPacketData(PacketBuffer buf) throws IOException {
+		this.header = buf.readTextComponent();
+		this.footer = buf.readTextComponent();
+	}
 
-    @SideOnly(Side.CLIENT)
-    public ITextComponent getHeader()
-    {
-        return this.header;
-    }
+	public void writePacketData(PacketBuffer buf) throws IOException {
+		// Paper start
+		if (header_paper != null) {
+			buf.writeString(ComponentSerializer.toString(this.header_paper));
+		} else {
+			buf.writeTextComponent(this.header);
+		}
+		if (footer_paper != null) {
+			buf.writeString(ComponentSerializer.toString(this.footer_paper));
+		} else {
+			buf.writeTextComponent(this.footer);
+		}
+		// Paper end
+	}
 
-    @SideOnly(Side.CLIENT)
-    public ITextComponent getFooter()
-    {
-        return this.footer;
-    }
+	public void processPacket(INetHandlerPlayClient handler) {
+		handler.handlePlayerListHeaderFooter(this);
+	}
+
+	@SideOnly(Side.CLIENT)
+	public ITextComponent getHeader() {
+		return this.header;
+	}
+
+	@SideOnly(Side.CLIENT)
+	public ITextComponent getFooter() {
+		return this.footer;
+	}
 }

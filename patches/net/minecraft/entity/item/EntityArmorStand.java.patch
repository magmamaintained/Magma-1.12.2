--- ../src-base/minecraft/net/minecraft/entity/item/EntityArmorStand.java
+++ ../src-work/minecraft/net/minecraft/entity/item/EntityArmorStand.java
@@ -8,6 +8,7 @@
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.MoverType;
 import net.minecraft.entity.effect.EntityLightningBolt;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.projectile.EntityArrow;
@@ -31,13 +32,19 @@
 import net.minecraft.util.datafix.DataFixer;
 import net.minecraft.util.datafix.FixTypes;
 import net.minecraft.util.datafix.walkers.ItemStackDataLists;
-import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Rotations;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.craftbukkit.v1_12_R1.CraftEquipmentSlot;
+import org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_12_R1.inventory.CraftItemStack;
+import org.bukkit.entity.ArmorStand;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerArmorStandManipulateEvent;
+import org.bukkit.inventory.EquipmentSlot;
 
 public class EntityArmorStand extends EntityLivingBase
 {
@@ -67,12 +74,14 @@
     public long punchCooldown;
     private int disabledSlots;
     private boolean wasMarker;
-    private Rotations headRotation;
-    private Rotations bodyRotation;
-    private Rotations leftArmRotation;
-    private Rotations rightArmRotation;
-    private Rotations leftLegRotation;
-    private Rotations rightLegRotation;
+    public Rotations headRotation;
+    public Rotations bodyRotation;
+    public Rotations leftArmRotation;
+    public Rotations rightArmRotation;
+    public Rotations leftLegRotation;
+    public Rotations rightLegRotation;
+    public boolean canMove = true; // Paper
+    public boolean canTick = true; // Paper - armour stand ticking
 
     public EntityArmorStand(World worldIn)
     {
@@ -87,6 +96,7 @@
         this.rightLegRotation = DEFAULT_RIGHTLEG_ROTATION;
         this.noClip = this.hasNoGravity();
         this.setSize(0.5F, 1.975F);
+        if (world != null) this.canTick = world.paperConfig.armorStandTick; // Paper - armour stand ticking
     }
 
     public EntityArmorStand(World worldIn, double posX, double posY, double posZ)
@@ -95,6 +105,13 @@
         this.setPosition(posX, posY, posZ);
     }
 
+    // CraftBukkit start - SPIGOT-3607, SPIGOT-3637
+    @Override
+    public float getBukkitYaw() {
+        return this.rotationYaw;
+    }
+    // CraftBukkit end
+
     protected final void setSize(float width, float height)
     {
         double d0 = this.posX;
@@ -254,6 +271,7 @@
         }
 
         compound.setTag("Pose", this.readPoseFromNBT());
+        compound.setBoolean("Paper.CanTick", this.canTick); // Paper - persist no tick setting
     }
 
     public void readEntityFromNBT(NBTTagCompound compound)
@@ -288,6 +306,10 @@
         this.setMarker(compound.getBoolean("Marker"));
         this.wasMarker = !this.hasMarker();
         this.noClip = this.hasNoGravity();
+        // Paper - persist no tick
+        if (compound.hasKey("Paper.CanTick")) {
+            this.canTick = compound.getBoolean("Paper.CanTick");
+        }
         NBTTagCompound nbttagcompound = compound.getCompoundTag("Pose");
         this.writePoseToNBT(nbttagcompound);
     }
@@ -457,6 +479,22 @@
         {
             if (!itemstack.isEmpty() || (this.disabledSlots & 1 << p_184795_2_.getSlotIndex() + 16) == 0)
             {
+                // CraftBukkit start
+                org.bukkit.inventory.ItemStack armorStandItem = CraftItemStack.asCraftMirror(itemstack);
+                org.bukkit.inventory.ItemStack playerHeldItem = CraftItemStack.asCraftMirror(p_184795_3_);
+
+                Player bukkitPlayer = (Player) player.getBukkitEntity();
+                ArmorStand self = (ArmorStand) this.getBukkitEntity();
+
+                EquipmentSlot slot = CraftEquipmentSlot.getSlot(p_184795_2_);
+                PlayerArmorStandManipulateEvent armorStandManipulateEvent = new PlayerArmorStandManipulateEvent(bukkitPlayer, self, playerHeldItem, armorStandItem, slot);
+                this.world.getServer().getPluginManager().callEvent(armorStandManipulateEvent);
+
+                if (armorStandManipulateEvent.isCancelled()) {
+                    return;
+                }
+                // CraftBukkit end
+
                 if (player.capabilities.isCreativeMode && itemstack.isEmpty() && !p_184795_3_.isEmpty())
                 {
                     ItemStack itemstack2 = p_184795_3_.copy();
@@ -484,11 +522,16 @@
 
     public boolean attackEntityFrom(DamageSource source, float amount)
     {
+        // CraftBukkit start
+        if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount)) {
+            return false;
+        }
+        // CraftBukkit end
         if (!this.world.isRemote && !this.isDead)
         {
             if (DamageSource.OUT_OF_WORLD.equals(source))
             {
-                this.setDead();
+                this.onKillCommand(); // CraftBukkit - this.die() -> this.onKillCommand()
                 return false;
             }
             else if (!this.isEntityInvulnerable(source) && !this.canInteract && !this.hasMarker())
@@ -496,7 +539,7 @@
                 if (source.isExplosion())
                 {
                     this.dropContents();
-                    this.setDead();
+                    this.onKillCommand(); // CraftBukkit - this.die() -> this.onKillCommand()
                     return false;
                 }
                 else if (DamageSource.IN_FIRE.equals(source))
@@ -541,7 +584,7 @@
                         {
                             this.playBrokenSound();
                             this.playParticles();
-                            this.setDead();
+                            this.onKillCommand(); // CraftBukkit - this.die() -> this.onKillCommand()
                             return false;
                         }
                         else
@@ -557,7 +600,7 @@
                             {
                                 this.dropBlock();
                                 this.playParticles();
-                                this.setDead();
+                                this.onKillCommand(); // CraftBukkit - this.die() -> this.onKillCommand()
                             }
 
                             return false;
@@ -623,7 +666,7 @@
         if (f <= 0.5F)
         {
             this.dropContents();
-            this.setDead();
+            this.onKillCommand(); // CraftBukkit - this.die() -> this.onKillCommand()
         }
         else
         {
@@ -633,7 +676,8 @@
 
     private void dropBlock()
     {
-        Block.spawnAsEntity(this.world, new BlockPos(this), new ItemStack(Items.ARMOR_STAND));
+//        Block.spawnAsEntity(this.world, new BlockPos(this), new ItemStack(Items.ARMOR_STAND));
+        drops.add(CraftItemStack.asBukkitCopy(new ItemStack(Items.ARMOR_STAND))); // CraftBukkit - add to drops
         this.dropContents();
     }
 
@@ -647,7 +691,8 @@
 
             if (!itemstack.isEmpty())
             {
-                Block.spawnAsEntity(this.world, (new BlockPos(this)).up(), itemstack);
+//                Block.spawnAsEntity(this.world, (new BlockPos(this)).up(), itemstack);
+                drops.add(CraftItemStack.asBukkitCopy(itemstack)); // CraftBukkit - add to drops
                 this.handItems.set(i, ItemStack.EMPTY);
             }
         }
@@ -658,7 +703,8 @@
 
             if (!itemstack1.isEmpty())
             {
-                Block.spawnAsEntity(this.world, (new BlockPos(this)).up(), itemstack1);
+//                Block.spawnAsEntity(this.world, (new BlockPos(this)).up(), itemstack1);
+                drops.add(CraftItemStack.asBukkitCopy(itemstack1)); // CraftBukkit - add to drops
                 this.armorItems.set(j, ItemStack.EMPTY);
             }
         }
@@ -708,6 +754,7 @@
 
     public void onUpdate()
     {
+        if (!this.canTick) return;// Paper
         super.onUpdate();
         Rotations rotations = (Rotations)this.dataManager.get(HEAD_ROTATION);
 
@@ -791,6 +838,8 @@
 
     public void onKillCommand()
     {
+        org.bukkit.event.entity.EntityDeathEvent event = CraftEventFactory.callEntityDeathEvent(this, drops); // CraftBukkit - call event // Paper - make cancellable
+        if (event.isCancelled()) return; // Paper - make cancellable
         this.setDead();
     }
 
@@ -804,7 +853,7 @@
         return this.hasMarker() ? EnumPushReaction.IGNORE : super.getPushReaction();
     }
 
-    private void setSmall(boolean small)
+    public void setSmall(boolean small)
     {
         this.dataManager.set(STATUS, Byte.valueOf(this.setBit(((Byte)this.dataManager.get(STATUS)).byteValue(), 1, small)));
         this.setSize(0.5F, 1.975F);
@@ -815,7 +864,7 @@
         return (((Byte)this.dataManager.get(STATUS)).byteValue() & 1) != 0;
     }
 
-    private void setShowArms(boolean showArms)
+    public void setShowArms(boolean showArms)
     {
         this.dataManager.set(STATUS, Byte.valueOf(this.setBit(((Byte)this.dataManager.get(STATUS)).byteValue(), 4, showArms)));
     }
@@ -825,7 +874,7 @@
         return (((Byte)this.dataManager.get(STATUS)).byteValue() & 4) != 0;
     }
 
-    private void setNoBasePlate(boolean noBasePlate)
+    public void setNoBasePlate(boolean noBasePlate)
     {
         this.dataManager.set(STATUS, Byte.valueOf(this.setBit(((Byte)this.dataManager.get(STATUS)).byteValue(), 8, noBasePlate)));
     }
@@ -835,7 +884,7 @@
         return (((Byte)this.dataManager.get(STATUS)).byteValue() & 8) != 0;
     }
 
-    private void setMarker(boolean marker)
+    public void setMarker(boolean marker)
     {
         this.dataManager.set(STATUS, Byte.valueOf(this.setBit(((Byte)this.dataManager.get(STATUS)).byteValue(), 16, marker)));
         this.setSize(0.5F, 1.975F);
@@ -957,7 +1006,7 @@
         return SoundEvents.ENTITY_ARMORSTAND_BREAK;
     }
 
-    public void onStruckByLightning(EntityLightningBolt lightningBolt)
+    public void onStruckByLightning(@Nullable EntityLightningBolt lightningBolt)
     {
     }
 
@@ -980,4 +1029,18 @@
     {
         return false;
     }
+
+    // Paper start
+    @Override
+    public void move(MoverType moveType, double x, double y, double z) {
+        if (this.canMove) {
+            super.move(moveType, x, y, z);
+        }
+    }
+
+    @Override
+    public boolean canBreatheUnderwater() { // Skips a bit of damage handling code, probably a micro-optimization
+        return true;
+    }
+    // Paper end
 }
